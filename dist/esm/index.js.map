{"version":3,"file":"index.js","sources":["../../src/Card/part/Front.jsx","../../src/Card/part/Back.jsx","../../src/Card/part/Cover.jsx","../../src/util/constant.js","../../src/util/calCoordinate.js","../../src/Card/index.jsx","../../src/index.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nFront.propTypes = {\n  style: PropTypes.object.isRequired,\n  radian: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  text: PropTypes.string,\n\n  onClick: PropTypes.func,\n  link: PropTypes.string,\n};\n\nexport default function Front(props) {\n  const { style, radian, height, text, onClick, link } = props;\n  const point = Math.tan(radian) * height;\n  const frontStyle = {\n    clipPath: `polygon(0px 0px, 0px ${height}px, ${point}px 0px)`,\n    zIndex: 10,\n  };\n  Object.assign(frontStyle, style);\n  return (\n    <a style={frontStyle} name=\"f\" onClick={onClick} href={link}>\n      {text}\n    </a>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nBack.propTypes = {\n  style: PropTypes.object.isRequired,\n  text: PropTypes.string,\n  boxShadow: PropTypes.string,\n\n  onClick: PropTypes.func,\n  link: PropTypes.string,\n};\n\nexport default function Back(props) {\n  const { style, text, boxShadow, onClick, link } = props;\n  const backStyle = {\n    boxShadow: boxShadow,\n    zIndex: -10,\n  };\n  Object.assign(backStyle, style);\n\n  return (\n    <a style={backStyle} onClick={onClick} href={link}>\n      {text}\n    </a>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nCover.propTypes = {\n  style: PropTypes.object.isRequired,\n  text: PropTypes.string,\n\n  height: PropTypes.number.isRequired,\n\n  onClick: PropTypes.func,\n  link: PropTypes.string,\n\n  problemCard: PropTypes.object.isRequired,\n};\n\nexport default function Cover(props) {\n  const { style, text, onClick, link, problemCard, height } = props;\n\n  let leftTopW = problemCard.leftTop[0];\n  let leftTopH = height - problemCard.leftTop[1];\n  let rightTopW = problemCard.rightTop[0];\n  let rightTopH = height - problemCard.rightTop[1];\n  let rightBottomW = problemCard.rightBottom[0];\n  let rightBottomH = height - problemCard.rightBottom[1];\n  let leftBottomW = 0;\n  let leftBottomH = height;\n\n  console.log(`polygon(${leftTopW}px ${leftTopH}px,\n    ${rightTopW}px ${rightTopH}px,\n    ${rightBottomW}px ${rightBottomH}px,\n    ${leftBottomW}px ${leftBottomH}px);`);\n\n  const coverStyle = {\n    zIndex: 0,\n    clipPath: `polygon(${leftTopW}px ${leftTopH}px,\n      ${rightTopW}px ${rightTopH}px,\n      ${rightBottomW}px ${rightBottomH}px,\n      ${leftBottomW}px ${leftBottomH}px)`,\n  };\n  Object.assign(coverStyle, style);\n  return (\n    <a style={coverStyle} onClick={onClick} href={link} name=\"cover\">\n      {text}\n    </a>\n  );\n}\n","export const fullRadian = Math.PI * 2;\nexport const quaterRadian = Math.PI / 2;\n","export default function calCoordinate(width, height, number, i = 1) {\n  const fullrad = Math.PI * 2;\n  const onerad = fullrad / number;\n  const inRad = onerad * i;\n\n  const leftbottomW = 0;\n  const leftbottomH = 0;\n\n  const lefttopW = -Math.sin(inRad) * height;\n  const lefttopH = Math.cos(inRad) * height;\n\n  const rightbottomW = Math.cos(inRad) * width;\n  const rightbottomH = Math.sin(inRad) * width;\n\n  const righttopH = lefttopH + rightbottomH;\n  const righttopW = lefttopW + rightbottomW;\n\n  const clipCord = {\n    leftTop: [lefttopW, lefttopH],\n    rightTop: [righttopW, righttopH],\n    leftBottom: [leftbottomW, leftbottomH],\n    rightBottom: [rightbottomW, rightbottomH],\n  };\n  return clipCord;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Front from \"./part/Front.jsx\";\nimport Back from \"./part/Back.jsx\";\nimport Cover from \"./part/Cover.jsx\";\n\nimport { quaterRadian } from \"../util/constant\";\nimport calCoordinate from \"../util/calCoordinate\";\n\nCard.propTypes = {\n  color: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  index: PropTypes.number.isRequired,\n  number: PropTypes.number.isRequired,\n\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n\n  radian: PropTypes.number.isRequired,\n\n  border: PropTypes.string,\n  borderRadius: PropTypes.string,\n  textColor: PropTypes.string,\n  fontWeight: PropTypes.string,\n  fontFamily: PropTypes.string,\n  boxShadow: PropTypes.string,\n\n  onClick: PropTypes.func,\n  link: PropTypes.string,\n};\n\nexport default function Card(props) {\n  const {\n    index,\n    color,\n    text,\n    width,\n    height,\n    radian,\n\n    border,\n    borderRadius,\n    textColor,\n    fontWeight,\n    fontFamily,\n    boxShadow,\n\n    link,\n    onClick,\n\n    number,\n  } = props;\n\n  const style = {\n    height: height + \"px\",\n    width: width + \"px\",\n    borderRadius: borderRadius ?? \"5px\",\n    border: border ?? \"none\",\n    boxSizing: \"border-box\",\n    padding: \"10px\",\n    color: textColor ?? \"white\",\n    backgroundColor: color,\n    textDecoration: \"none\",\n\n    wordBreak: \"break-all\",\n\n    position: \"absolute\",\n    transformOrigin: \"bottom left\",\n    transform: `rotate(${props.radian * (index - 1)}rad) translate(0px, 0px)`,\n\n    fontWeight: fontWeight ?? \"bold\",\n    fontFamily: fontFamily,\n  };\n  return (\n    <>\n      <Front\n        style={style}\n        radian={radian}\n        height={height}\n        text={text}\n        onClick={onClick}\n        link={link}\n      ></Front>\n      <Back\n        style={style}\n        text={text}\n        boxShadow={boxShadow ?? \"none\"}\n        onClick={onClick}\n        link={link}\n      ></Back>\n      {0 <= radian * index && radian * index < quaterRadian && (\n        <Cover\n          style={style}\n          problemCard={calCoordinate(width, height, number, index)}\n          height={height}\n          text={text}\n        ></Cover>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport Card from \"./Card/index.jsx\";\nimport gradient from \"gradient-color\";\nimport PropTypes from \"prop-types\";\nimport { fullRadian } from \"./util/constant\";\n\nPinwheelNavbar.propTypes = {\n  colors: PropTypes.array.isRequired,\n  texts: PropTypes.array.isRequired,\n\n  links: PropTypes.array,\n  onClicks: PropTypes.array,\n\n  number: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n\n  border: PropTypes.string,\n  borderRadius: PropTypes.string,\n  textColor: PropTypes.string,\n  fontWeight: PropTypes.string,\n  fontFamily: PropTypes.string,\n  boxShadow: PropTypes.string,\n};\n\nexport default function PinwheelNavbar(props) {\n  let colors = props.colors;\n  const {\n    texts,\n    number,\n    width,\n    height,\n    border,\n    borderRadius,\n    textColor,\n    fontWeight,\n    fontFamily,\n    boxShadow,\n    links,\n    onClicks,\n  } = props;\n  const radian = fullRadian / number;\n  const wrapper = Math.sqrt(height ** 2 + width ** 2);\n\n  const boxStyle = {\n    height: wrapper * 2 + \"px\",\n    width: wrapper * 2 + \"px\",\n    boxSizing: \"border-box\",\n    paddingLeft: wrapper,\n    paddingTop: wrapper - height,\n  };\n\n  if (colors.length < number) {\n    colors = gradient(colors, number);\n  } else if (colors.length > number) {\n    colors = colors.slice(0, number);\n  }\n\n  return (\n    <div style={boxStyle}>\n      {colors.map((color, index) => {\n        return (\n          <Card\n            key={index}\n            width={width}\n            height={height}\n            color={color}\n            radian={radian}\n            border={border}\n            text={texts[index]}\n            index={index}\n            borderRadius={borderRadius}\n            textColor={textColor}\n            fontWeight={fontWeight}\n            fontFamily={fontFamily}\n            boxShadow={boxShadow}\n            onClick={onClicks && onClicks[index]}\n            link={links && links[index]}\n            number={number}\n          ></Card>\n        );\n      })}\n    </div>\n  );\n}\n"],"names":["Front","propTypes","style","PropTypes","object","isRequired","radian","number","height","text","string","onClick","func","link","props","point","Math","tan","frontStyle","clipPath","zIndex","Object","assign","Back","boxShadow","backStyle","Cover","problemCard","leftTopW","leftTop","leftTopH","rightTopW","rightTop","rightTopH","rightBottomW","rightBottom","rightBottomH","leftBottomW","leftBottomH","console","log","coverStyle","fullRadian","PI","quaterRadian","calCoordinate","width","i","fullrad","onerad","inRad","leftbottomW","leftbottomH","lefttopW","sin","lefttopH","cos","rightbottomW","rightbottomH","righttopH","righttopW","clipCord","leftBottom","Card","color","index","border","borderRadius","textColor","fontWeight","fontFamily","boxSizing","padding","backgroundColor","textDecoration","wordBreak","position","transformOrigin","transform","PinwheelNavbar","colors","array","texts","links","onClicks","wrapper","sqrt","boxStyle","paddingLeft","paddingTop","length","gradient","slice","map"],"mappings":"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"}